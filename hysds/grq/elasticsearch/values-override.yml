---
clusterName: "grq-es"

# Permit co-located instances for solitary minikube virtual machines.
antiAffinity: "soft"

# Shrink default JVM heap.
esJavaOpts: "-Xmx512m -Xms512m"

# Allocate smaller chunks of memory per pod.
resources:
  requests:
    cpu: "1000m"
    memory: "2Gi"
  limits:
    cpu: "1000m"
    memory: "2Gi"

# Request smaller persistent volumes.
volumeClaimTemplate:
  accessModes: ["ReadWriteOnce"]
  storageClassName: "hostpath"
  resources:
    requests:
      storage: 5Gi

# elasticsearch:
masterService: "grq-es"

# because we're using 1 node the cluster health will be YELLOW instead of GREEN after data is ingested
clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"

replicas: 1

service:
  type: "LoadBalancer"

httpPort: 9201
transportPort: 9301

esConfig:
  elasticsearch.yml: |
    http.cors.enabled : true
    http.cors.allow-origin: "*"
    http.port: 9201

lifecycle:
  postStart:
    exec:
      command:
        - bash
        - -c
        - |
          #!/bin/bash
          ES_URL=http://localhost:9201
          while [[ "$(curl -s -o /dev/null -w '%{http_code}\n' $ES_URL)" != "200" ]]; do sleep 1; done

          grq_es_template=$(curl -s https://raw.githubusercontent.com/hysds/grq2/develop/config/es_template.json)
          template=$(echo ${grq_es_template} | sed 's/{{ prefix }}/grq/;s/{{ alias }}/grq/')
          curl -X PUT "$ES_URL/_template/grq" -H 'Content-Type: application/json' -d "${template}"

          ingest_pipeline=$(curl -s https://raw.githubusercontent.com/hysds/grq2/develop/config/ingest_pipeline.json)
          curl -X PUT "$ES_URL/_ingest/pipeline/dataset_pipeline" -H 'Content-Type: application/json' -d "${ingest_pipeline}"

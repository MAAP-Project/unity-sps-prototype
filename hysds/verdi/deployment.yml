apiVersion: apps/v1
kind: Deployment
metadata:
  name: verdi
  labels:
    app: verdi
spec:
  # replicas: 2
  selector:
    matchLabels:
      app: verdi
  template:
    metadata:
      labels:
        app: verdi
    spec:
      initContainers:
        - name: change-ownership
          image: k8s.gcr.io/busybox
          command: ["/bin/sh", "-c"]
          args:
            - chmod 777 /var/run/docker.sock;
              chown -R 1000:1000 /private/tmp/data;
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: data-work
              mountPath: /private/tmp/data
      containers:
        - name: verdi
          image: verdi:unity-v0.0.1
          command: ["supervisord", "--nodaemon"]
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: celeryconfig
              mountPath: /home/ops/hysds/celeryconfig.py
              subPath: celeryconfig.py
            - name: datasets
              mountPath: /home/ops/datasets.json
              subPath: datasets.json
            - name: supervisord-verdi
              mountPath: /etc/supervisord.conf
              subPath: supervisord.conf
            - name: aws-credentials
              mountPath: /home/ops/.aws/credentials
              subPath: aws-credentials
            - name: data-work
              mountPath: /private/tmp/data
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: celeryconfig
          configMap:
            name: celeryconfig
        - name: datasets
          configMap:
            name: datasets
        - name: supervisord-verdi
          configMap:
            name: supervisord-verdi
        - name: aws-credentials
          configMap:
            name: aws-credentials
        - name: data-work
          hostPath:
            path: /private/tmp/data
